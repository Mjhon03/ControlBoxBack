//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CorresponsalService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="corresponsal", Namespace="http://schemas.datacontract.org/2004/07/ControlBoxWCF.Models.Entities")]
    public partial class corresponsal : object
    {
        
        private int _cor_corresponsal_idField;
        
        private string _cor_nombreField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int _cor_corresponsal_id
        {
            get
            {
                return this._cor_corresponsal_idField;
            }
            set
            {
                this._cor_corresponsal_idField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _cor_nombre
        {
            get
            {
                return this._cor_nombreField;
            }
            set
            {
                this._cor_nombreField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CorresponsalService.ICorresponsales")]
    public interface ICorresponsales
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICorresponsales/GetDataCorresponsal", ReplyAction="http://tempuri.org/ICorresponsales/GetDataCorresponsalResponse")]
        CorresponsalService.corresponsal[] GetDataCorresponsal();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICorresponsales/GetDataCorresponsal", ReplyAction="http://tempuri.org/ICorresponsales/GetDataCorresponsalResponse")]
        System.Threading.Tasks.Task<CorresponsalService.corresponsal[]> GetDataCorresponsalAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICorresponsales/AddDataCorresponsal", ReplyAction="http://tempuri.org/ICorresponsales/AddDataCorresponsalResponse")]
        string AddDataCorresponsal(CorresponsalService.corresponsal cor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICorresponsales/AddDataCorresponsal", ReplyAction="http://tempuri.org/ICorresponsales/AddDataCorresponsalResponse")]
        System.Threading.Tasks.Task<string> AddDataCorresponsalAsync(CorresponsalService.corresponsal cor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICorresponsales/UpdateDataCorresponsal", ReplyAction="http://tempuri.org/ICorresponsales/UpdateDataCorresponsalResponse")]
        string UpdateDataCorresponsal(CorresponsalService.corresponsal cor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICorresponsales/UpdateDataCorresponsal", ReplyAction="http://tempuri.org/ICorresponsales/UpdateDataCorresponsalResponse")]
        System.Threading.Tasks.Task<string> UpdateDataCorresponsalAsync(CorresponsalService.corresponsal cor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICorresponsales/DeleteCorresponsal", ReplyAction="http://tempuri.org/ICorresponsales/DeleteCorresponsalResponse")]
        string DeleteCorresponsal(CorresponsalService.corresponsal cor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICorresponsales/DeleteCorresponsal", ReplyAction="http://tempuri.org/ICorresponsales/DeleteCorresponsalResponse")]
        System.Threading.Tasks.Task<string> DeleteCorresponsalAsync(CorresponsalService.corresponsal cor);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface ICorresponsalesChannel : CorresponsalService.ICorresponsales, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class CorresponsalesClient : System.ServiceModel.ClientBase<CorresponsalService.ICorresponsales>, CorresponsalService.ICorresponsales
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public CorresponsalesClient() : 
                base(CorresponsalesClient.GetDefaultBinding(), CorresponsalesClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_ICorresponsales.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CorresponsalesClient(EndpointConfiguration endpointConfiguration) : 
                base(CorresponsalesClient.GetBindingForEndpoint(endpointConfiguration), CorresponsalesClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CorresponsalesClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(CorresponsalesClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CorresponsalesClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(CorresponsalesClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CorresponsalesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public CorresponsalService.corresponsal[] GetDataCorresponsal()
        {
            return base.Channel.GetDataCorresponsal();
        }
        
        public System.Threading.Tasks.Task<CorresponsalService.corresponsal[]> GetDataCorresponsalAsync()
        {
            return base.Channel.GetDataCorresponsalAsync();
        }
        
        public string AddDataCorresponsal(CorresponsalService.corresponsal cor)
        {
            return base.Channel.AddDataCorresponsal(cor);
        }
        
        public System.Threading.Tasks.Task<string> AddDataCorresponsalAsync(CorresponsalService.corresponsal cor)
        {
            return base.Channel.AddDataCorresponsalAsync(cor);
        }
        
        public string UpdateDataCorresponsal(CorresponsalService.corresponsal cor)
        {
            return base.Channel.UpdateDataCorresponsal(cor);
        }
        
        public System.Threading.Tasks.Task<string> UpdateDataCorresponsalAsync(CorresponsalService.corresponsal cor)
        {
            return base.Channel.UpdateDataCorresponsalAsync(cor);
        }
        
        public string DeleteCorresponsal(CorresponsalService.corresponsal cor)
        {
            return base.Channel.DeleteCorresponsal(cor);
        }
        
        public System.Threading.Tasks.Task<string> DeleteCorresponsalAsync(CorresponsalService.corresponsal cor)
        {
            return base.Channel.DeleteCorresponsalAsync(cor);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ICorresponsales))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ICorresponsales))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:58418/Corresponsales.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return CorresponsalesClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_ICorresponsales);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return CorresponsalesClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_ICorresponsales);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_ICorresponsales,
        }
    }
}
